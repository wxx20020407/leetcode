11. Container With Most Water

// Solution 1. Force. Time Limit Exceeded
class Solution {
public:
    int maxArea(vector<int>& height) {
        int max = 0;
        for(int i = 0; i < height.size(); ++i){
            for(int j = i+1; j < height.size(); ++j){
                int tmp = min(height[i],height[j]) * (j - i);
                if(tmp > max) max = tmp;
            }
        }
        return max;
    }
};

// Solution 2. (1ms 62.95MB)
class Solution {
public:
    int maxArea(vector<int>& height) {
        int left = 0;
        int right = height.size()-1;
        int ans = 0;
        while(left < right){
            int tmp = min(height[left],height[right]) * (right - left); 
            ans = max(ans,tmp);
            if(height[left] < height[right]){
                ++left;
            }
            else{
                --right;
            }
        }
        return  ans;
    }
};

/* WARNING!!!!!
don't make it :
if(height[left] < height[right]){ ++left; } 
if(height[left] >= height[right]){ --right; }
because the index changed before you made the second comparison.
*/
