// Solution 1. (0ms 12.3MB)
class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int p1 = m-1;
        int p2 = n-1;
        int p = m+n-1;
        while(p >= 0){
            if(p2 == -1) return;
            else if(p1 == -1 || nums2[p2] > nums1[p1]){
                nums1[p] = nums2[p2];
                p--; p2--;
            }
            else{
                nums1[p] = nums1[p1];
                p--; p1--;
            }
        }
        return;
    }
};

// better format:
class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int p1 = m-1;
        int p2 = n-1;
        int p = m+n-1;
        while(p2 >= 0){
            if(p1 < 0 || nums2[p2] > nums1[p1]){
                nums1[p] = nums2[p2];
                p--; p2--;
            }
            else{
                nums1[p] = nums1[p1];
                p--; p1--;
            }
        }
        return;
    }
};
